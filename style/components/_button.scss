@use "sass:color";
@use "sass:selector";
@use "sass:string";

@use "mixins/elevation" as *;
@use "mixins/state_layer" as *;
@use "mixins/typography" as *;

@use "theme/color" as *;
@use "theme/shape" as *;

@mixin group-default($selector, $default: false) {
    $s: string.unquote($selector);

    &#{selector.append($selector, $selector, $selector)},
    box.button-group#{$selector} & {
        @content;
    }

    @if $default {
        & {
            @content;
        }
    }
}

button {
    @include state-layer;

    transition-property:
        background-color, background-image, border-color, border-radius, color,
        box-shadow;
    transition-duration: 0.3s;

    @include group-default(".elevated") {
        @include elevation(1);

        background-color: $surface-container-low;
        color: $primary;

        &.toggle:checked {
            background-color: $primary;
            color: $on-primary;
        }
    }

    @include group-default(".filled") {
        background-color: $primary;
        color: $on-primary;

        &.toggle:not(:checked) {
            background-color: $surface-container;
            color: $on-surface-variant;
        }
    }

    @include group-default(".tonal") {
        background-color: $primary-container;
        color: $on-primary-container;

        &.toggle:checked {
            background-color: $primary;
            color: $on-primary;
        }
    }

    @include group-default(".outlined") {
        border-style: solid;
        border-color: $outline-variant;
        color: $on-surface-variant;

        &.toggle:checked {
            background-color: $inverse-surface;
            color: $inverse-on-surface;
            border-width: 0;
        }
    }

    @include group-default(".text", $default: true) {
        color: $primary;
    }

    @include group-default(".extra-small") {
        @include typography(label-large);

        border-radius: 16px;
        border-width: 1px;
        min-height: 32px;
        padding: 0 12px;

        // &.square:not(:checked),
        // &:not(.square).toggle:checked {
        //     border-radius: $radius-medium;
        // }

        &:active:active:active:active:active {
            border-radius: $radius-small;
        }
    }

    @include group-default(".small", $default: true) {
        @include typography(label-large);

        border-radius: 20px;
        border-width: 1px;
        min-height: 40px;
        padding: 0 16px;

        // &.square:not(:checked),
        // &:not(.square).toggle:checked {
        //     border-radius: $radius-medium;
        // }

        &:active:active:active:active:active {
            border-radius: $radius-small;
        }
    }

    @include group-default(".medium") {
        @include typography(title-medium);

        border-radius: 28px;
        border-width: 1px;
        min-height: 56px;
        padding: 0 24px;

        // &.square:not(:checked),
        // &:not(.square).toggle:checked {
        //     border-radius: $radius-large;
        // }

        &:active:active:active:active:active {
            border-radius: $radius-medium;
        }
    }

    @include group-default(".large") {
        @include typography(headline-small);

        border-radius: 48px;
        border-width: 2px;
        min-height: 96px;
        padding: 0 48px;

        // &.square:not(:checked),
        // &:not(.square).toggle:checked {
        //     border-radius: $radius-extra-large;
        // }

        &:active:active:active:active:active {
            border-radius: $radius-large;
        }
    }

    @include group-default(".extra-large") {
        @include typography(headline-large);

        border-radius: 68px;
        border-width: 3px;
        min-height: 136px;
        padding: 0 64px;

        // &.square:not(:checked),
        // &:not(.square).toggle:checked {
        //     border-radius: $radius-extra-large;
        // }

        &:active:active:active:active:active {
            border-radius: $radius-large;
        }
    }

    &.icon {
        line-height: 1;

        @include group-default(".filled") {
            color: $on-primary;

            &.toggle:checked {
                color: $on-primary;
            }
        }

        @include group-default(".tonal") {
            color: $on-primary-container;

            &.toggle:checked {
                color: $on-primary;
            }
        }

        @include group-default(".outlined") {
            &.toggle:checked {
                color: $inverse-on-surface;
            }
        }

        @include group-default(".text", $default: true) {
            color: $on-surface-variant;

            &.toggle:checked {
                color: $primary;
            }
        }

        @include group-default(".extra-small") {
            &.narrow {
                padding: 0 4px;
            }

            font-size: 20px;
            padding: 0 6px;

            &.wide {
                padding: 0 10px;
            }
        }

        @include group-default(".small", $default: true) {
            &.narrow {
                padding: 0 4px;
            }

            font-size: 24px;
            padding: 0 8px;

            &.wide {
                padding: 0 14px;
            }
        }

        @include group-default(".medium") {
            &.narrow {
                padding: 0 12px;
            }

            font-size: 24px;
            padding: 0 16px;

            &.wide {
                padding: 0 24px;
            }
        }

        @include group-default(".large") {
            &.narrow {
                padding: 0 16px;
            }

            font-size: 32px;
            padding: 0 32px;

            &.wide {
                padding: 0 48px;
            }
        }

        @include group-default(".extra-large") {
            &.narrow {
                padding: 0 32px;
            }

            font-size: 40px;
            padding: 0 48px;

            &.wide {
                padding: 0 72px;
            }
        }
    }
}
